model_1 : 

InputLayer(input_shape=(52,))
Dense(64, activation='relu')
Dense(32, activation='relu')
Dense(21, activation='softmax')
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_val, y_val))


--------------------------------------------------------------------------------------------------------------------------
 
model 2

model = Sequential([
        InputLayer(input_shape=(52,)), 
        Dense(128, activation='relu'),
        BatchNormalization(),
        Dense(64, activation='relu'),
        BatchNormalization(),
        Dense(32, activation='relu'),
        Dense(21, activation='softmax')  # 21 output classes
    ])

# Compile the model
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_val, y_val))

--------------------------------------------------------------------------------------------------------------------------
